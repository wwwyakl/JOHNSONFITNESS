#ifndef __WLT2564_COMMAND_H__
    #define __WLT2564_COMMAND_H__

#ifdef __BLUETOOTH_WLT2654__
#include "HAL_Lib.h"
#include "Bluetooth_lib.h"

typedef enum{
  BTCMD_START,
  BTCMD_HELP= BTCMD_START,
  BTCMD_REGISTERSPPLE ,
  BTCMD_GETMAC,
  BTCMD_STOPADVERTISELE,
  BTCMD_ADVERTISELE,
  BTCMD_GETUPDATEINFO,
  BTCMD_SENDDATA,
  BTCMD_ECHO,
  BTCMD_REGISTERAVRCP,
  BTCMD_AUDINIT,
  BTCMD_SETDISCOVERYMODE,
  BTCMD_PINCODE,
  BTCMD_MASTERMODE,
  BTCMD_SLAVERMODE,
  BTCMD_STARTSCANNING,
  BTCMD_STOPSCANNING,
  BTCMD_CONNECTLE,
  BTCMD_SETBLENAME,
  BTCMD_SETAMPNAME,
  BTCMD_GETBLENAME,
  BTCMD_MRESET,
  BTCMD_GETLOCALNAME,
  BTCMD_SETADVERTISELE,   //zsf
  BTCMD_SETCONNECTMODE,   //zsf
  BTCMD_UARTUPDATE,   //zsf
  BTCMD_END
}BTCMD;
typedef enum{
    BTRECIVE_START,
    BTCMD_CONNECTED=BTRECIVE_START,
        BTCMD_GET_VERSION,       
    BTCMD_DISCONNECTED,
    BTCMD_GET_UPDATEINFO,   //zsf
    BTCMD_RECVDATA,
    BTCMD_LENGTH,
    BTRECIVE_ERR,
    BTCMD_GETCHANGEDLOCALNAME,
    BTCMD_GETDEALOCALNAME,
    BTCMD_MACADDRESS,
    BTRECIVE_OK,
    BTRECIVE_0X,
    BTCMD_AC,
    BTCMD_AD,
    BTCMD_SETBLENAMEFLAG,
    BTCMD_BLENAMEWRONG,
    BTCMD_INITIAL,
    BTCMD_INITIALCOMPLETE,
//    BTCMD_BLEHEARTADDR,
    BTRECIVE_END
}BTRECIVE;
typedef enum{
    SEND_CMD_START,
    SEND_CMD_INITIAL_COMPLETE,
    SEND_CMD_GETMAC_COMPLETE,
    SEND_CMD_GETBLENAME_COMPLETE,
    SEND_CMD_SETBLENAME_COMPLETE,
    SEND_CMD_GETAMPNAME_COMPLETE,
    SEND_CMD_INITIAL,
    SEND_CMD_END
}INITIALCMD;

typedef enum{
    UPDATE_CMD_START,
    UPDATE_CMD_GETUPDATEINFO_COMPLETE,
    STOP_CMD_ADVERTISELE_COMPLETE,
    STOP_CMD_SETDISCOVERYMODE_COMPLETE,
    STOP_CMD_SETCONNECTMODE_COMPLETE,
    UPDATE_CMD_UARTUPDATE_COMPLETE,
    UARTUPDATE_COMPLETE,
    UARTUPDATE_FAIL,
    UPDATE_CMD_END
}UPDATECMD;     //zsf

typedef enum{
    UARTUPDATE_CMD_START,
    UARTUPDATE_CMD_ADVERTISELE,
    UARTUPDATE_CMD_SETDISCOVERYMODE,
    UARTUPDATE_CMD_SETCONNECTMODE,
    UARTUPDATE_CMD_SEND,
    UARTUPDATE_DATA_START,
    UARTUPDATE_DATA_OK,
    UARTUPDATE_DATA_ERR,
    UARTUPDATE_DATA_COMPLETE,
    UARTUPDATE_DATA_FAIL,
    UARTUPDATE_CMD_END
}UARTUPDATESTATUS;     //zsf

void wlt2564Initial(void);
void wlt2564ResetInitial();
UINT8 wlt2564_Get_Mode(void);
bool  wlt2564SendData(UINT8* buf, UINT16 length);
bool  wlt2564SendUpdateData(UINT8* buf, UINT16 length);  //zsf
void WltSetSendReady(void);
bool wlt2564MasterSlaverModeSwitch(char  mode);
bool wlt2564StartScaning(void);
UINT8 wlt2564_Get_HeartData(void);
UINT8 wlt2564_Get_ConnectStatus(void);
UINT8 wlt2564_Get_BT_LED_Statu(void);
void clear_buffer(void);
UINT16 WltGetReciveData(UINT8* data);
bool  wlt2564SendCommand(UINT8 Cmd,UINT8* buf, UINT16 length);
void wlt2564_Set_Mode(unsigned char modetype);
void wlt2564_Set_HeartData(UINT8 heartrate);
void Wlt2564_Reset(void);
void GetWlt2564MAC(void);
UINT8 GetBleNameFlag();
void SetBleNameFlag(char i);
UINT8 GetUpdateFlag();  //zsf
void SetUpdateFlag(char i);    //zsf
void wlt2564_Set_CmdStatu(unsigned char i);
UINT8 wlt2564_Get_CmdStatu();
UINT8 wlt2564_Get_UpdateStatu();    //zsf
UINT8 *BT_Get_BTMac(void);
UINT8 *BT_Get_BT_Version(void);
UINT8 wlt2564GetAmpConnectStatus(void);
#endif
#endif
